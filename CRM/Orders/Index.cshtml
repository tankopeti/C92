@page
@using Microsoft.AspNetCore.Mvc.Rendering
@using Cloud9_2.Models
@using Cloud9_2.Data
@using Microsoft.AspNetCore.Antiforgery
@model Cloud9_2.Pages.CRM.Orders.IndexModel
@using System.Globalization
@section Styles {
    <link rel="stylesheet" href="~/css/Orders.css" />
}

@functions {
    public string GetAntiForgeryToken()
    {
        var antiForgery = PageContext.HttpContext.RequestServices.GetService<IAntiforgery>();
        var tokenSet = antiForgery?.GetAndStoreTokens(PageContext.HttpContext);
        return tokenSet?.RequestToken ?? string.Empty;
    }
}
@{
    ViewData["Title"] = "Rendelések";
    Layout = "_Layout";
}
@await Html.PartialAsync("_CRMSidebar")

<div class="right-content">
    <div class="page-header-fixed-top">
        <!-- Breadcrumb Navigation -->
        <div class="d-flex justify-content-between align-items-center mb-2">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-body-tertiary rounded-3 p-2 mb-0">
                    <li class="breadcrumb-item"><a href="../../">Főoldal</a></li>
                    <li class="breadcrumb-item"><a href="../">CRM Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Rendelések</li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Orders.Count of @Model.DistinctOrderIdCount rendelés@(Model.DistinctOrderIdCount != 1 ? "ek" : "") (Page @Model.CurrentPage of @Model.TotalPages)</li>
                </ol>
            </nav>
        </div>

        <!-- Header with Buttons and Search -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="d-flex align-items-center gap-2">
                <button type="button" id="newOrderButton" class="btn-new" data-bs-toggle="modal" data-bs-target="#newOrderModal" aria-label="Új rendelés létrehozása">
                    <i class="bi bi-plus-circle me-1"></i>Új rendelés
                </button>
            </div>
            <div class="d-flex align-items-center gap-2">
                <form method="get" class="input-group input-group-sm" style="width: 250px;">
                    <input type="text" class="form-control" placeholder="Keresés..." id="searchInput" name="SearchTerm" value="@Model.SearchTerm" autocomplete="off" aria-label="Keresés rendelések között">
                    <input type="hidden" name="pageSize" value="@Model.PageSize" />
                    <button class="btn btn-outline-secondary" type="submit" aria-label="Keresés indítása">
                        <i class="bi bi-search"></i>
                    </button>
                </form>
                <!-- Filter/Sort Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Rendezési és szűrési opciók">
                        <i class="bi bi-funnel me-1"></i>Rendezés/Szűrés
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="?SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize&StatusFilter=all&SortBy=OrderDate">Összes rendelés (Legújabb elöl)</a></li>
                        <li><a class="dropdown-item" href="?SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize&StatusFilter=all&SortBy=OrderId">Rendezés: Rendelés ID (Csökkenő)</a></li>
                        <li><a class="dropdown-item" href="?SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize&StatusFilter=all&SortBy=OrderNumber">Rendelésszám</a></li>
                        <li><a class="dropdown-item" href="?SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize&StatusFilter=all&SortBy=PartnerName">Partner neve</a></li>
                        <li><a class="dropdown-item" href="?SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize&StatusFilter=all&SortBy=TotalAmount">Összesen</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Card Grid Header -->
        <div class="card-grid-header">
            <div class="card-grid-row">
                <div class="card-grid-column col">Rendelésszám</div>
                <div class="card-grid-column col">Partner</div>
                <div class="card-grid-column col">Dátum</div>
                <div class="card-grid-column col">Státusz</div>
                <div class="card-grid-column col">Rendelés összege</div>
                <div class="card-grid-column col">Műveletek</div>
            </div>
        </div>
    </div>

    <!-- Card Grid Body -->
    <div class="scrollable-card-container">
        <div class="card-grid-body">
            @if (Model.Orders.Any())
            {
                @foreach (var order in Model.Orders)
                {
                    <div class="card partner-card mb-3" data-order-id="@order.OrderId">
                        <div class="card-body p-2">
                            <div class="card-grid-row align-items-center">
                                <div class="card-grid-cell col">
                                    <div class="order-info">
                                        <div class="fw-bold">@order.OrderNumber</div>
                                    </div>
                                </div>
                                <div class="card-grid-cell col">
                                    <div class="order-partner text-muted small">
                                        <i class="bi bi-person me-1"></i>@order.Partner?.Name
                                    </div>
                                </div>
                                <div class="card-grid-cell col">
                                    <div class="order-date text-muted small">
                                        <i class="bi bi-calendar me-1"></i>@(order.OrderDate?.ToString("yyyy-MM-dd"))
                                    </div>
                                </div>
                                <div class="card-grid-cell col">
                                    @{
                                        var badgeClass = "badge bg-secondary";
                                        if (order.Status == "Pending") badgeClass = "badge badge-pending";
                                        else if (order.Status == "Confirmed") badgeClass = "badge badge-confirmed";
                                        else if (order.Status == "Shipped") badgeClass = "badge badge-shipped";
                                        else if (order.Status == "Cancelled") badgeClass = "badge badge-cancelled";
                                    }
                                    <span class="@badgeClass">@Model.StatusDisplayNames[order.Status]</span>
                                </div>
                                <div class="card-grid-cell col">
                                    <div class="order-amount text-muted small">
                                        <i class="bi bi-currency-dollar me-1"></i>@(order.TotalAmount?.ToString("C", CultureInfo.GetCultureInfo("hu-HU")))
                                    </div>
                                </div>
                                <div class="btn-group btn-group-sm col" role="group">
                                    <button type="button" class="btn btn-outline-info btn-sm view-order-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#viewOrderModal_@order.OrderId"
                                            aria-label="Rendelés részleteinek megtekintése">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <div class="dropdown">
                                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button"
                                                id="actionsDropdown_@order.OrderId"
                                                data-bs-toggle="dropdown"
                                                aria-expanded="false"
                                                aria-label="További műveletek">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="actionsDropdown_@order.OrderId">
                                            <li>
                                                <a class="dropdown-item" href="#"
                                                   data-bs-toggle="modal"
                                                   data-bs-target="#editOrderModal_@order.OrderId">
                                                    <i class="bi bi-pencil-square me-2"></i>Szerkesztés
                                                </a>
                                            </li>
                                            <li><a class="dropdown-item" href="#" onclick="copyOrder(@order.OrderId)"><i class="bi bi-copy me-2"></i>Másolás</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteOrderModal_@order.OrderId"><i class="bi bi-trash me-2"></i>Törlés</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-warning text-center mt-3" role="alert">
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        @:No orders found matching "@Model.SearchTerm" on page @Model.CurrentPage.
                    }
                    else if (Model.TotalRecords > 0)
                    {
                        @:No orders found on page @Model.CurrentPage, but @Model.TotalRecords orders exist. Try changing the page or adjusting filters.
                    }
                    else
                    {
                        @:No orders found. <button type="button" class="btn btn-link alert-link p-0 align-baseline" data-bs-toggle="modal" data-bs-target="#newOrderModal" aria-label="Első rendelés létrehozása">Create the first one?</button>
                    }
                    <!-- Debug Info -->
                    <div class="mt-2 small text-muted">
                        Debug: Page=@Model.CurrentPage, PageSize=@Model.PageSize, TotalRecords=@Model.TotalRecords, DistinctOrderIdCount=@Model.DistinctOrderIdCount, SearchTerm="@Model.SearchTerm"
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Pagination Footer -->
    @await Html.PartialAsync("_PaginationFooter", new PaginationViewModel
    {
        CurrentPage = Model.CurrentPage,
        TotalPages = Model.TotalPages,
        PageSize = Model.PageSize,
        SearchTerm = Model.SearchTerm,
        PageRoute = "./Index",
        EntityName = "Quotes"
    })

 @await Html.PartialAsync("_Modals")
    
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1055;"></div>
    


<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

<!-- Tom Select Dependencies -->
<link href="https://cdn.jsdelivr.net/npm/tom-select@2.4.3/dist/css/tom-select.bootstrap5.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/tom-select@2.4.3/dist/js/tom-select.complete.min.js"></script>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/tom-select@2.2.2/dist/js/tom-select.complete.min.js"></script>
    <script src="/js/orders.js" onerror="alert('Failed to load quotes.js from /js/orders.js.')"></script>
    <script src="/js/utils.js"></script>
    <script src="/js/tomSelectUtils.js"></script>
    <script src="/js/orderTomSelects.js" onerror="alert('Failed to load quotes.js from /js/orderTomSelects.js.')"></script>
}

