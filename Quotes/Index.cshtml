
@page
@using Microsoft.AspNetCore.Mvc.Rendering
@using Cloud9_2.Models
@using System.Globalization
@model Cloud9_2.Pages.CRM.Quotes.IndexModel

@{
    Layout = "_Layout";
}

@await Html.PartialAsync("_CRMSidebar")

<div class="right-content">
    <div class="page-header-fixed-top">
        <!-- Breadcrumb Navigation -->
        <div class="d-flex justify-content-between align-items-center mb-2">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-body-tertiary rounded-3 p-2 mb-0">
                    <li class="breadcrumb-item"><a href="../../">Főoldal</a></li>
                    <li class="breadcrumb-item"><a href="../">CRM Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Quotes</li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Quotes.Count of @Model.TotalRecords quote@(Model.TotalRecords != 1 ? "s" : "") (Page @Model.CurrentPage of @Model.TotalPages)</li>
                </ol>
            </nav>
        </div>

        <!-- Header with Buttons and Search -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="d-flex align-items-center gap-2">
                <button type="button" id="newQuoteButton" class="btn-new" data-bs-toggle="modal" data-bs-target="#newQuoteModal" aria-label="Új árajánlat létrehozása">
                    <i class="bi bi-plus-circle me-1"></i>Új árajánlat
                </button>
            </div>
            <div class="d-flex align-items-center gap-2">
                <form method="get" asp-page="./Index" class="input-group input-group-sm" style="width: 250px;">
                    <input type="text" class="form-control" placeholder="Keresés..." id="searchInput" name="SearchTerm" value="@Model.SearchTerm" autocomplete="off" aria-label="Keresés árajánlatok között">
                    <input type="hidden" name="pageSize" value="@Model.PageSize" />
                    <button class="btn btn-outline-secondary" type="submit" aria-label="Keresés indítása">
                        <i class="bi bi-search"></i>
                    </button>
                </form>
                <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Szűrési opciók">
                        <i class="bi bi-funnel me-1"></i>Szűrés
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="#" data-filter="all">All Quotes</a></li>
                        <li><a class="dropdown-item" href="#" data-filter="Draft">Draft</a></li>
                        <li><a class="dropdown-item" href="#" data-filter="Sent">Sent</a></li>
                        <li><a class="dropdown-item" href="#" data-filter="Accepted">Accepted</a></li>
                        <li><a class="dropdown-item" href="#" data-filter="Rejected">Rejected</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Card Grid Header -->
        <div class="card-grid-header">
            <div class="card-grid-row">
                <div class="card-grid-column quote-number-col">Ajánlat szám</div>
                <div class="card-grid-column quote-partner-col">Partner</div>
                <div class="card-grid-column quote-date-col">Dátum</div>
                <div class="card-grid-column quote-status-col">Státusz</div>
                <div class="card-grid-column quote-amount-col">Ajánlat összege</div>
                <div class="card-grid-column actions-column">Műveletek</div>
            </div>
        </div>
    </div>

    <!-- Card Grid Body -->
    <div class="scrollable-card-container">
        <div class="card-grid-body">
            @if (Model.Quotes.Any())
            {
                @foreach (var quote in Model.Quotes)
                {
                    <div class="card partner-card mb-3" data-quote-id="@quote.QuoteId">
                        <div class="card-body p-2">
                            <div class="card-grid-row align-items-center">
                                <div class="card-grid-cell quote-number-col">
                                    <div class="quote-info">
                                        <div class="fw-bold">@quote.QuoteNumber</div>
                                    </div>
                                </div>
                                <div class="card-grid-cell quote-partner-col">
                                    <div class="quote-partner text-muted small">
                                        <i class="bi bi-person me-1"></i>@quote.Partner.Name
                                    </div>
                                </div>
                                <div class="card-grid-cell quote-date-col">
                                    <div class="quote-date text-muted small">
                                        <i class="bi bi-calendar me-1"></i>@quote.QuoteDate?.ToString("yyyy-MM-dd")
                                    </div>
                                </div>
                                <div class="card-grid-cell quote-status-col">
                                    @{
                                        var badgeClass = "badge bg-secondary";
                                        if (quote.Status == "Tervezet") badgeClass = "badge badge-draft";
                                        else if (quote.Status == "Elküldve") badgeClass = "badge badge-sent";
                                        else if (quote.Status == "Elfogadva") badgeClass = "badge badge-accepted";
                                        else if (quote.Status == "Elutasítva") badgeClass = "badge badge-rejected";
                                    }
                                    <span class="@badgeClass">@quote.Status</span>
                                </div>
                                <div class="card-grid-cell quote-amount-col">
                                    <div class="quote-amount text-muted small">
                                        <i class="bi bi-currency-dollar me-1"></i>@quote.TotalAmount?.ToString("C")
                                    </div>
                                </div>
                                <div class="btn-group btn-group-sm" role="group">
                                    <button type="button" class="btn btn-outline-info btn-sm view-quote-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#viewQuoteModal_@quote.QuoteId"
                                            aria-label="Árajánlat részleteinek megtekintése">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <div class="dropdown">
                                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button"
                                                id="actionsDropdown_@quote.QuoteId"
                                                data-bs-toggle="dropdown" 
                                                aria-expanded="false"
                                                aria-label="További műveletek">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="actionsDropdown_@quote.QuoteId">
                                            <li>
                                            <a 
                                                class="dropdown-item" 
                                                href="#" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editQuoteModal_@quote.QuoteId">
                                                <i class="bi bi-pencil-square me-2"></i>Szerkesztés
                                            </a>
                                            </li>
                                            <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#quoteItemsModal_@quote.QuoteId"><i class="bi bi-list-ul me-2"></i>Tételek szerkesztése</a></li>
                                            <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#viewQuoteModal_@quote.QuoteId"><i class="bi bi-eye me-2"></i>Megtekintés</a></li>
                                            <li><a class="dropdown-item" href="#" onclick="copyQuote(@quote.QuoteId)"><i class="bi bi-copy me-2"></i>Másolás</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteQuoteModal_@quote.QuoteId"><i class="bi bi-trash me-2"></i>Törlés</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                            <!-- Edit Quote Modal -->
<div class="modal fade" id="editQuoteModal_@quote.QuoteId" tabindex="-1" aria-labelledby="editQuoteModalLabel_@quote.QuoteId" aria-hidden="true" data-quote-id="@quote.QuoteId">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editQuoteModalLabel_@quote.QuoteId">Szerkesztés: @quote.QuoteNumber , @quote.Partner.CompanyName</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
            </div>
            <div class="modal-body">
                <!-- Tab Navigation -->
                <ul class="nav nav-tabs" id="quoteTabs_@quote.QuoteId" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="base-info-tab_@quote.QuoteId" data-bs-toggle="tab" data-bs-target="#base-info_@quote.QuoteId" type="button" role="tab" aria-controls="base-info_@quote.QuoteId" aria-selected="true">Alapadatok</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="items-tab_@quote.QuoteId" data-bs-toggle="tab" data-bs-target="#items_@quote.QuoteId" type="button" role="tab" aria-controls="items_@quote.QuoteId" aria-selected="false">Tételek</button>
                    </li>
                </ul>

                <!-- Tab Content -->
                <div class="tab-content" id="quoteTabsContent_@quote.QuoteId">
                    <!-- Base Info Tab -->
                    <div class="tab-pane fade show active" id="base-info_@quote.QuoteId" role="tabpanel" aria-labelledby="base-info-tab_@quote.QuoteId">
                        <form id="quoteBaseInfoForm_@quote.QuoteId">
                            <table class="table table-sm mt-3">
                                <tbody>
                                    <tr>
                                        <th>Árajánlat száma</th>
                                        <td><input type="text" class="form-control" name="quoteNumber" value="@quote.QuoteNumber" readonly></td>
                                    </tr>
                                    <tr>
                                        <th>Dátum</th>
                                        <td><input type="date" class="form-control" name="quoteDate" value="@quote.QuoteDate?.ToString("yyyy-MM-dd")"></td>
<tr>
                    <th>Partner</th>
                    <td>
<select name="partnerId" class="form-select tom-select" data-selected-id="@quote.PartnerId" data-selected-text="@(quote.Partner?.CompanyName ?? "Unknown")" autocomplete="off">
                            <option value=""></option>
                        </select>
                        <!-- Debug -->
                        <p class="text-muted">Debug: PartnerId = @quote.PartnerId, CompanyName = @quote.Partner?.CompanyName</p>
                    </td>
                </tr>
                                    <tr>
                                        <th>Értékesítő</th>
                                        <td><input type="text" class="form-control" name="salesPerson" value="@(quote.SalesPerson ?? "")"></td>
                                    </tr>
                                    <tr>
                                        <th>Érvényességi dátum</th>
                                        <td><input type="date" class="form-control" name="validityDate" value="@(quote.ValidityDate?.ToString("yyyy-MM-dd") ?? "")"></td>
                                    </tr>
                                    <tr>
                                        <th>Tárgy</th>
                                        <td><input type="text" class="form-control" name="subject" value="@(quote.Subject ?? "")"></td>
                                    </tr>
                                    <tr>
                                        <th>Leírás</th>
                                        <td><textarea class="form-control" name="description">@(quote.Description ?? "")</textarea></td>
                                    </tr>
                                    <tr>
                                        <th>Státusz</th>
                                        <td>
                                            <select class="form-select" name="status">
                                                @foreach (var status in Enum.GetValues(typeof(Cloud9_2.Pages.CRM.Quotes.QuoteStatus)))
                                                {
                                                    <option value="@status" selected="@(quote.Status == status.ToString())">@status</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </form>
                    </div>

                    <!-- Items Tab -->
                    <div class="tab-pane fade" id="items_@quote.QuoteId" role="tabpanel" aria-labelledby="items-tab_@quote.QuoteId">
                        <h5 class="mt-3">Tételek szerkesztése</h5>
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Termék</th>
                                    <th>Mennyiség</th>
                                    <th>Egységár</th>
                                    <th>Kedvezmény</th>
                                    <th>Összesen</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (quote.QuoteItems != null && quote.QuoteItems.Any())
                                {
                                    @foreach (var quoteItem in quote.QuoteItems)
                                    {
                                        <tr data-item-id="@quoteItem.QuoteItemId">
                                            <td>
                                                <button type="button" class="btn btn-link p-0 text-start" data-bs-toggle="collapse" data-bs-target="#desc_@quoteItem.QuoteItemId">
                                                    @(quoteItem.Product?.Name ?? "N/A")
                                                </button>
                                            </td>
                                            <td><input type="number" class="form-control quantity" value="@quoteItem.Quantity.ToString(CultureInfo.InvariantCulture)" min="0" step="1"></td>
                                            <td><input type="number" class="form-control unit-price" value="@quoteItem.UnitPrice.ToString("F2", CultureInfo.InvariantCulture)" min="0" step="0.01"></td>
                                            <td>
                                                <div class="input-group">
                                                    <input type="number" class="form-control discount" value="@(quoteItem.DiscountPercentage.HasValue && quoteItem.DiscountPercentage.Value > 0
                                                        ? quoteItem.DiscountPercentage.Value.ToString("F2", CultureInfo.InvariantCulture)
                                                        : quoteItem.DiscountAmount.HasValue && quoteItem.DiscountAmount.Value > 0
                                                            ? quoteItem.DiscountAmount.Value.ToString("F2", CultureInfo.InvariantCulture)
                                                            : "0.00")" min="0" step="0.01">
                                                    <select class="form-select discount-type" style="width: auto;">
                                                        @if (quoteItem.DiscountPercentage.HasValue && quoteItem.DiscountPercentage.Value > 0)
                                                        {
                                                            <option value="percentage" selected>%</option>
                                                            <option value="amount">Ft</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="percentage">%</option>
                                                            <option value="amount" selected>Ft</option>
                                                        }
                                                    </select>
                                                </div>
                                            </td>
                                            <td>
                                                <input type="text" class="form-control total" readonly
                                                       value="@((quoteItem.Quantity * quoteItem.UnitPrice - 
                                                               (quoteItem.DiscountAmount ?? 
                                                               (quoteItem.DiscountPercentage.HasValue 
                                                                   ? (quoteItem.Quantity * quoteItem.UnitPrice * quoteItem.DiscountPercentage.Value / 100) 
                                                                   : 0)
                                                               )).ToString("F2", CultureInfo.GetCultureInfo("hu-HU")))">
                                            </td>
                                        </tr>
                                        <tr class="collapse description-row" id="desc_@quoteItem.QuoteItemId" data-item-id="@quoteItem.QuoteItemId">
                                            <td colspan="5">
                                                <textarea class="form-control description" rows="3" maxlength="200">@(quoteItem.ItemDescription ?? "")</textarea>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5">Nincsenek tételek.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Bezárás</button>
                <button type="button" class="btn btn-primary save-quote">Mentés</button>
            </div>
        </div>
    </div>
</div>
                }
            }
            else
            {
                <div class="alert alert-warning text-center mt-3" role="alert">
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        @:No quotes found matching "@Model.SearchTerm" on page @Model.CurrentPage.
                    }
                    else if (Model.TotalRecords > 0)
                    {
                        @:No quotes found on page @Model.CurrentPage, but @Model.TotalRecords quotes exist. Try changing the page or adjusting filters.
                    }
                    else
                    {
                        @:No quotes found. <button type="button" class="btn btn-link alert-link p-0 align-baseline" data-bs-toggle="modal" data-bs-target="#newQuoteModal" aria-label="Első árajánlat létrehozása">Create the first one?</button>
                    }
                    <!-- Debug Info -->
                    <div class="mt-2 small text-muted">
                        Debug: Page=@Model.CurrentPage, PageSize=@Model.PageSize, TotalRecords=@Model.TotalRecords, SearchTerm="@Model.SearchTerm"
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Pagination Footer -->
    @await Html.PartialAsync("_PaginationFooter", new PaginationViewModel
    {
        CurrentPage = Model.CurrentPage,
        TotalPages = Model.TotalPages,
        PageSize = Model.PageSize,
        SearchTerm = Model.SearchTerm,
        PageRoute = "./Index",
        EntityName = "Quotes"
    })

    <!-- New Quote Modal -->
    <div class="modal fade" id="newQuoteModal" tabindex="-1" aria-labelledby="newQuoteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="newQuoteModalLabel">Új árajánlat</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
                </div>
                <div class="modal-body">
                    <form id="quoteForm" method="post" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="quoteId" name="QuoteId" value="0">
                        <!-- Tabs -->
                        <ul class="nav nav-tabs" id="quoteTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab" aria-controls="details" aria-selected="true">Részletek</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="items-tab" data-bs-toggle="tab" data-bs-target="#items" type="button" role="tab" aria-controls="items" aria-selected="false">Tételek</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="discounts-tab" data-bs-toggle="tab" data-bs-target="#discounts" type="button" role="tab" aria-controls="discounts" aria-selected="false">Kedvezmények</button>
                            </li>
                        </ul>
                        <div class="tab-content" id="quoteTabContent">
                            <!-- Quote Details Tab -->
                            <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
                                <div class="mb-3">
                                    <label for="partnerId" class="form-label">Partner <span class="text-danger">*</span></label>
                                    <select id="partnerId" name="PartnerId" class="form-control select2-partner" required aria-label="Partner kiválasztása">
                                        <option value="">Válasszon partnert...</option>
                                    </select>
                                    <div class="invalid-feedback">Kérjük, válasszon partnert.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="currencyId" class="form-label">Pénznem <span class="text-danger">*</span></label>
                                    <select id="currencyId" name="CurrencyId" class="form-control select2-currency" required aria-label="Pénznem kiválasztása">
                                        <option value="">Válasszon pénznemet...</option>
                                    </select>
                                    <div class="invalid-feedback">Kérjük, válasszon pénznemet.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="salesPerson" class="form-label">Értékesítő <span class="text-danger">*</span></label>
                                    <input id="salesPerson" name="SalesPerson" type="text" class="form-control" required aria-label="Értékesítő neve">
                                    <div class="invalid-feedback">Kérjük, adja meg az értékesítő nevét.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="quoteDate" class="form-label required">Dátum <span class="text-danger">*</span></label>
                                    <input id="quoteDate" name="QuoteDate" type="date" class="form-control" required aria-label="Árajánlat dátuma">
                                    <div class="invalid-feedback">Kérjük, adja meg az árajánlat dátumát.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="validityDate" class="form-label">Érvényességi dátum</label>
                                    <input id="validityDate" name="ValidityDate" type="date" class="form-control" aria-label="Érvényességi dátum">
                                </div>
                                <div class="mb-3">
                                    <label for="subject" class="form-label">Tárgy <span class="text-danger">*</span></label>
                                    <input id="subject" name="Subject" type="text" maxlength="200" class="form-control" required aria-label="Árajánlat tárgya">
                                    <div class="invalid-feedback">Kérjük, adja meg az árajánlat tárgyát.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="description" class="form-label">Leírás</label>
                                    <input id="description" name="Description" type="text" maxlength="200" class="form-control" aria-label="Leírás">
                                </div>
                                <div class="mb-3">
                                    <label for="detailedDescription" class="form-label">Részletes leírás</label>
                                    <textarea id="detailedDescription" name="DetailedDescription" class="form-control" rows="5" aria-label="Részletes leírás"></textarea>
                                </div>
                                <div class="mb-3">
                                    <label for="status" class="form-label">Státusz</label>
                                    <select id="status" name="Status" class="form-control" aria-label="Státusz kiválasztása">
                                        <option value="Draft" selected>Kész</option>
                                        <option value="Sent">Küldött</option>
                                        <option value="Approved">Elfogadott</option>
                                        <option value="Rejected">Elutasított</option>
                                    </select>
                                </div>
                            </div>
                            <!-- Items Tab -->
                            <div class="tab-pane fade" id="items" role="tabpanel" aria-labelledby="items-tab">
                                <table id="quoteItemsTable" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Termék</th>
                                            <th>Leírás</th>
                                            <th>Mennyiség</th>
                                            <th>Egységár</th>
                                            <th>Kedvezmény</th>
                                            <th>Összeg</th>
                                            <th>Műveletek</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                                <button type="button" class="btn btn-outline-primary btn-sm mb-3 toggle-item-form" aria-label="Új tétel hozzáadása"><i class="fas fa-plus"></i> Tétel hozzáadása</button>
                                <div class="item-form" style="display: none;">
                                    <div class="mb-3">
                                        <label for="newProductId" class="form-label">Termék <span class="text-danger">*</span></label>
                                        <select id="newProductId" class="form-control select2-product" required aria-label="Termék kiválasztása">
                                            <option value="">Válasszon terméket...</option>
                                        </select>
                                        <div class="invalid-feedback">Kérjük, válasszon terméket.</div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="newItemDescription" class="form-label">Leírás</label>
                                        <input id="newItemDescription" class="form-control" aria-label="Tétel leírása">
                                    </div>
                                    <div class="mb-3">
                                        <label for="newQuantity" class="form-label">Mennyiség <span class="text-danger">*</span></label>
                                        <input id="newQuantity" type="number" min="1" class="form-control" required aria-label="Mennyiség">
                                        <div class="invalid-feedback">Kérjük, adja meg a mennyiséget (minimum 1).</div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="newUnitPrice" class="form-label">Egységár <span class="text-danger">*</span></label>
                                        <input id="newUnitPrice" type="number" step="0.01" min="0.01" class="form-control" required aria-label="Egységár">
                                        <div class="invalid-feedback">Kérjük, adja meg az egységárat (minimum 0.01).</div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="newDiscountPercentage" class="form-label">Kedvezmény (%)</label>
                                        <input id="newDiscountPercentage" type="number" step="0.01" min="0" max="100" class="form-control" value="0" aria-label="Kedvezmény százaléka">
                                    </div>
                                    <div class="mb-3">
                                        <label for="newDiscountAmount" class="form-label">Kedvezmény összege</label>
                                        <input id="newDiscountAmount" type="number" step="0.01" min="0" class="form-control" value="0" aria-label="Kedvezmény összege">
                                    </div>
                                    <div class="mb-3">
                                        <label for="newTotalPrice" class="form-label">Összeg</label>
                                        <input id="newTotalPrice" class="form-control" readonly aria-label="Tétel összege">
                                    </div>
                                    <button type="button" class="btn btn-primary btn-sm add-item" aria-label="Tétel hozzáadása">Tétel hozzáadása</button>
                                    <button type="button" class="btn btn-outline-secondary btn-sm cancel-item" aria-label="Mégse">Mégse</button>
                                </div>
                            </div>
                            <!-- Discounts Tab -->
                            <div class="tab-pane fade" id="discounts" role="tabpanel" aria-labelledby="discounts-tab">
                                <div class="mb-3">
                                    <label for="discountPercentage" class="form-label">Kedvezmény (%)</label>
                                    <input id="discountPercentage" name="DiscountPercentage" type="number" step="0.01" min="0" max="100" class="form-control" value="0.00" aria-label="Kedvezmény százaléka">
                                </div>
                                <div class="mb-3">
                                    <label for="discountAmount" class="form-label">Kedvezmény összege</label>
                                    <input id="discountAmount" name="DiscountAmount" type="number" step="0.01" min="0" class="form-control" value="0.00" aria-label="Kedvezmény összege">
                                </div>
                                <div class="mb-3">
                                    <label for="totalAmount" class="form-label">Végösszeg</label>
                                    <input id="totalAmount" name="TotalAmount" class="form-control" readonly value="0.00" aria-label="Végösszeg">
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" aria-label="Mégse">Mégse</button>
                    <button type="button" class="btn btn-primary" id="saveQuoteButton" aria-label="Árajánlat mentése">Mentés</button>
                </div>
            </div>
        </div>
    </div>



    <!-- Quote Items Modal -->
    @foreach (var quote in Model.Quotes)
    {
        <div class="modal fade" id="quoteItemsModal_@quote.QuoteId" tabindex="-1" aria-labelledby="quoteItemsModalLabel_@quote.QuoteId" aria-hidden="true">
            <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="quoteItemsModalLabel_@quote.QuoteId">Tételek: @(quote.Description ?? "N/A")</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newQuoteItemModal_@quote.QuoteId" aria-label="Új tétel hozzáadása">
                                <i class="bi bi-plus-circle me-1"></i> Új tétel
                            </button>
                        </div>
                        <table class="table table-hover" id="quoteItemsTable_@quote.QuoteId">
                            <thead>
                                <tr>
                                    <th scope="col">Termék</th>
                                    <th scope="col">Leírás</th>
                                    <th scope="col">Mennyiség</th>
                                    <th scope="col">Egységár</th>
                                    <th scope="col">Kedvezmény</th>
                                    <th scope="col">Összeg</th>
                                    <th scope="col">Műveletek</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (!quote.QuoteItems.Any())
                                {
                                    <tr>
                                        <td colspan="7">Nincsenek tételek az árajánlathoz.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var quoteItem in quote.QuoteItems)
                                    {
                                        <tr data-item-id="@quoteItem.QuoteItemId">
                                            <td>@(quoteItem.Product?.Name ?? "N/A")</td>
                                            <td>@quoteItem.ItemDescription</td>
                                            <td>@quoteItem.Quantity</td>
                                            <td>@quoteItem.UnitPrice.ToString("F2", CultureInfo.GetCultureInfo("hu-HU"))</td>
                                            <td>
                                                @(quoteItem.DiscountPercentage.HasValue && quoteItem.DiscountPercentage.Value > 0
                                                    ? $"{quoteItem.DiscountPercentage.Value:F2}%"
                                                    : quoteItem.DiscountAmount.HasValue && quoteItem.DiscountAmount.Value > 0
                                                        ? $"{quoteItem.DiscountAmount.Value:F2}"
                                                        : "0,00")
                                            </td>
                                            <td>
                                                @((quoteItem.Quantity * quoteItem.UnitPrice - (quoteItem.DiscountAmount ?? (quoteItem.DiscountPercentage.HasValue ? (quoteItem.Quantity * quoteItem.UnitPrice * quoteItem.DiscountPercentage.Value / 100) : 0))).ToString("F2", CultureInfo.GetCultureInfo("hu-HU")))
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button class="btn btn-primary btn-sm edit-quote-item"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#editQuoteItemModal"
                                                            data-quote-id="@quote.QuoteId"
                                                            data-item-id="@quoteItem.QuoteItemId"
                                                            data-product-id="@quoteItem.ProductId"
                                                            data-product-name="@(quoteItem.Product?.Name ?? "")"
                                                            data-quantity="@quoteItem.Quantity"
                                                            data-unit-price="@quoteItem.UnitPrice.ToString("F2", CultureInfo.GetCultureInfo("hu-HU"))"
                                                            data-discount="@(quoteItem.DiscountPercentage.HasValue && quoteItem.DiscountPercentage.Value > 0 ? quoteItem.DiscountPercentage.Value.ToString("F2", CultureInfo.GetCultureInfo("hu-HU")) : quoteItem.DiscountAmount.HasValue && quoteItem.DiscountAmount.Value > 0 ? quoteItem.DiscountAmount.Value.ToString("F2", CultureInfo.GetCultureInfo("hu-HU")) : "")"
                                                            data-discount-type="@(quoteItem.DiscountPercentage.HasValue && quoteItem.DiscountPercentage.Value > 0 ? "percentage" : "amount")"
                                                            data-description="@quoteItem.ItemDescription"
                                                            data-total-price="@((quoteItem.Quantity * quoteItem.UnitPrice - (quoteItem.DiscountAmount ?? (quoteItem.DiscountPercentage.HasValue ? (quoteItem.Quantity * quoteItem.UnitPrice * quoteItem.DiscountPercentage.Value / 100) : 0))).ToString("F2", CultureInfo.GetCultureInfo("hu-HU")))"
                                                            aria-label="Tétel szerkesztése">
                                                        <i class="bi bi-pencil-square me-1"></i>Szerkesztés
                                                    </button>
                                                    <button class="btn btn-danger btn-sm delete-item"
                                                            data-quote-id="@quote.QuoteId"
                                                            data-item-id="@quoteItem.QuoteItemId"
                                                            aria-label="Tétel törlése">
                                                        <i class="bi bi-trash me-2"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Bezárás">Bezárás</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- New Quote Item Modal -->
        <div class="modal fade" id="newQuoteItemModal_@quote.QuoteId" tabindex="-1" aria-labelledby="newQuoteItemModalLabel_@quote.QuoteId" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="newQuoteItemModalLabel_@quote.QuoteId">Új tétel @quote.QuoteNumber</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
                    </div>
                    <div class="modal-body">
                        <form id="newQuoteItemForm_@quote.QuoteId" class="needs-validation" novalidate>
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="QuoteId" id="editQuoteId" value="@quote.QuoteId" autocomplete="off" />
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label for="productId_@quote.QuoteId" class="form-label">Termék <span class="text-danger">*</span></label>
                                    <select class="form-select select2-product" id="productId_@quote.QuoteId" name="ProductId" required>
                                        <option value="">Válasszon terméket...</option>
                                    </select>
                                    <div class="invalid-feedback">Termék kiválasztása kötelező.</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="newQuantity_@quote.QuoteId" class="form-label">Mennyiség <span class="text-danger">*</span></label>
                                    <input type="number" min="0.01" step="0.01" class="form-control quantity" id="newQuantity_@quote.QuoteId" name="Quantity" value="1.00" required autocomplete="off">
                                    <div class="invalid-feedback">Mennyiség megadása kötelező és nagyobb kell legyen, mint 0.</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="newUnitPrice_@quote.QuoteId" class="form-label">Egységár <span class="text-danger">*</span></label>
                                    <input type="number" step="0.01" min="0.01" class="form-control unitPrice" id="newUnitPrice_@quote.QuoteId" name="UnitPrice" value="0.00" required autocomplete="off">
                                    <div class="invalid-feedback">Egységár megadása kötelező.</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="newItemDiscount_@quote.QuoteId" class="form-label">Kedvezmény</label>
                                    <div class="input-group">
                                        <input type="number" step="0.01" min="0" class="form-control itemDiscount" id="newItemDiscount_@quote.QuoteId" name="Discount" value="0.00" placeholder="0.00" autocomplete="off">
                                        <select class="form-select" id="newItemDiscountType_@quote.QuoteId" name="DiscountType" style="width: auto;">
                                            <option value="percentage" selected>Százalék (%)</option>
                                            <option value="amount">Összeg (HUF)</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <label for="newItemDescription_@quote.QuoteId" class="form-label">Tétel leírása</label>
                                    <textarea class="form-control" id="newItemDescription_@quote.QuoteId" name="ItemDescription" maxlength="200" rows="3" autocomplete="off"></textarea>
                                </div>
                                <div class="col-md-6">
                                    <label for="newTotalPrice_@quote.QuoteId" class="form-label">Összeg</label>
                                    <input type="text" class="form-control" id="newTotalPrice_@quote.QuoteId" value="0.00" readonly autocomplete="off">
                                </div>
                            </div>
                            <div class="mt-3">
                                <button type="button" class="btn btn-primary save-quote-item" data-quote-id="@quote.QuoteId" aria-label="Tétel mentése">Tétel mentése</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Mégse">Mégse</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- View Quote Modal -->
        <div class="modal fade" id="viewQuoteModal_@quote.QuoteId" tabindex="-1" aria-labelledby="viewQuoteModalLabel_@quote.QuoteId" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="viewQuoteModalLabel_@quote.QuoteId">Részletek: @quote.QuoteNumber</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
                    </div>
                    <div class="modal-body">
                        <table class="table table-sm">
                            <tbody>
                                <tr><th>Árajánlat száma</th><td>@quote.QuoteNumber</td></tr>
                                <tr><th>Dátum</th><td>@quote.QuoteDate?.ToString("yyyy-MM-dd")</td></tr>
                                <tr><th>Partner</th><td>@quote.Partner.Name</td></tr>
                                <tr><th>Értékesítő</th><td>@quote.SalesPerson</td></tr>
                                <tr><th>Érvényesség dátuma</th><td>@(quote.ValidityDate?.ToString("yyyy-MM-dd"))</td></tr>
                                <tr><th>Státusz</th><td>@quote.Status</td></tr>
                                <tr><th>Tárgy</th><td>@quote.Subject</td></tr>
                                <tr><th>Leírás</th><td>@quote.Description</td></tr>
                                <tr><th>Részletes leírás</th><td>@quote.DetailedDescription</td></tr>
                                <tr><th>Kedvezmény %</th><td>@(quote.DiscountPercentage.HasValue ? quote.DiscountPercentage.Value.ToString("F2", CultureInfo.GetCultureInfo("hu-HU")) : "0,00")</td></tr>
                                <tr><th>Kedvezmény összeg</th><td>@(quote.DiscountAmount.HasValue ? quote.DiscountAmount.Value.ToString("F2", CultureInfo.GetCultureInfo("hu-HU")) : "0,00")</td></tr>
                                <tr><th>Összesen</th><td>@(quote.TotalAmount.HasValue ? quote.TotalAmount.Value.ToString("F2", CultureInfo.GetCultureInfo("hu-HU")) : "0,00")</td></tr>
                            </tbody>
                        </table>
                        <h5 class="mt-4">Tételek</h5>
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Termék</th>
                                    <th>Leírás</th>
                                    <th>Mennyiség</th>
                                    <th>Egységár</th>
                                    <th>Kedvezmény</th>
                                    <th>Összesen</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (quote.QuoteItems != null && quote.QuoteItems.Any())
                                {
                                    @foreach (var quoteItem in quote.QuoteItems)
                                    {
                                        <tr data-item-id="@quoteItem.QuoteItemId">
                                            <td>@(quoteItem.Product?.Name ?? "N/A")</td>
                                            <td>@quoteItem.ItemDescription</td>
                                            <td>@quoteItem.Quantity</td>
                                            <td>@quoteItem.UnitPrice.ToString("F2", CultureInfo.GetCultureInfo("hu-HU"))</td>
                                            <td>
                                                @(quoteItem.DiscountPercentage.HasValue && quoteItem.DiscountPercentage.Value > 0
                                                    ? $"{quoteItem.DiscountPercentage.Value:F2}%"
                                                    : quoteItem.DiscountAmount.HasValue && quoteItem.DiscountAmount.Value > 0
                                                        ? $"{quoteItem.DiscountAmount.Value:F2}"
                                                        : "0,00")
                                            </td>
                                            <td>
                                                @((quoteItem.Quantity * quoteItem.UnitPrice - (quoteItem.DiscountAmount ?? (quoteItem.DiscountPercentage.HasValue ? (quoteItem.Quantity * quoteItem.UnitPrice * quoteItem.DiscountPercentage.Value / 100) : 0))).ToString("F2", CultureInfo.GetCultureInfo("hu-HU")))
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6">Nincsenek tételek.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Bezárás">Bezárás</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Quote Modal -->
        <div class="modal fade" id="deleteQuoteModal_@quote.QuoteId" tabindex="-1" aria-labelledby="deleteQuoteModalLabel_@quote.QuoteId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteQuoteModalLabel_@quote.QuoteId">Árajánlat törlése</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
                    </div>
                    <div class="modal-body">
                        <form id="deleteQuoteForm_@quote.QuoteId" method="post" asp-page-handler="DeleteQuote">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="QuoteId" value="@quote.QuoteId" autocomplete="off" />
                            <p>Biztosan törölni szeretné a következő árajánlatot: <strong>@quote.QuoteNumber</strong>?</p>
                            <div id="deleteWarning_@quote.QuoteId" class="alert alert-warning" style="display: none;">
                                Ez az árajánlat nem törölhető, mert kapcsolódó rekordok léteznek.
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Mégse">Mégse</button>
                        <button type="button" class="btn btn-danger confirm-delete-quote" data-quote-id="@quote.QuoteId" aria-label="Árajánlat törlése">Törlés</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Single Edit Quote Item Modal -->
    <div class="modal fade" id="editQuoteItemModal" tabindex="-1" aria-labelledby="editQuoteItemModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editQuoteItemModalLabel">Tétel szerkesztése</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Bezárás"></button>
                </div>
                <div class="modal-body">
                    <form id="editQuoteItemForm" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="QuoteId" id="editQuoteId" autocomplete="off" />
                        <input type="hidden" name="QuoteItemId" id="editQuoteItemId" autocomplete="off" />
                        <input type="hidden" name="ProductId" id="editProductId" autocomplete="off" />
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="editProductName" class="form-label">Termék <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="editProductName" readonly autocomplete="off" required />
                                <div class="invalid-feedback">Termék kiválasztása kötelező.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="editQuantity" class="form-label">Mennyiség <span class="text-danger">*</span></label>
                                <input type="number" id="editQuantity" class="form-control" step="0.01" min="0.01" value="1" required />
                                <div class="invalid-feedback">Mennyiség megadása kötelező.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="editUnitPrice" class="form-label">Egységár <span class="text-danger">*</span></label>
                                <input type="number" step="0.01" min="0.01" class="form-control unitPrice" id="editUnitPrice" name="UnitPrice" required autocomplete="off" />
                                <div class="invalid-feedback">Egységár megadása kötelező.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="editItemDiscount" class="form-label">Kedvezmény</label>
                                <div class="input-group">
                                    <input type="number" step="0.01" min="0" class="form-control itemDiscount" id="editItemDiscount" name="Discount" placeholder="0.00" autocomplete="off" />
                                    <select class="form-select" id="editItemDiscountType" name="DiscountType" style="width: auto;">
                                        <option value="percentage">Százalék (%)</option>
                                        <option value="amount">Összeg (HUF)</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-12">
                                <label for="editItemDescription" class="form-label">Tétel leírása</label>
                                <textarea class="form-control" id="editItemDescription" name="ItemDescription" maxlength="200" rows="3" autocomplete="off"></textarea>
                            </div>
                            <div class="col-md-6">
                                <label for="editTotalPrice" class="form-label">Összeg</label>
                                <input type="text" class="form-control" id="editTotalPrice" readonly autocomplete="off" />
                            </div>
                        </div>
                        <div class="mt-3">
                            <button type="button" class="btn btn-primary save-quote-item" id="saveQuoteItemBtn" aria-label="Tétel mentése">Tétel mentése</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Mégse">Mégse</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1055;"></div>

    @section Scripts {
        <script>
            $(document).ready(function () {
                const debug = true;
                function log(message, ...args) {
                    if (debug) console.log(`[DEBUG] ${message}`, ...args);
                }

                function showToast(type, message) {
                    // Create the toast element
                    const toast = $(`
                        <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="d-flex">
                                <div class="toast-body">${message}</div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                        </div>
                    `);

                    // Append toast to the container
                    $('#toastContainer').append(toast);

                    // Initialize and show the toast
                    const bsToast = new bootstrap.Toast(toast[0]);
                    bsToast.show();

                    // Remove the toast after 5 seconds
                    setTimeout(() => toast.remove(), 5500); // Includes 500ms fade-out
                }

                function getTodayDate() {
                    const today = new Date();
                    return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;
                }

                function initializeSelect2(selector, quoteId) {
                    console.log(`[Select2] Initializing for ${selector}, QuoteId: ${quoteId}`);
                    const $select = $(selector);

                    if (!$select.length) {
                        console.error(`[Select2] ERROR: Element not found: ${selector}`);
                        return;
                    }

                    if ($select.hasClass('select2-hidden-accessible')) {
                        $select.select2('destroy');
                        console.log(`[Select2] Destroyed existing Select2 instance for ${selector}`);
                    }

                    const $modal = $(`#newQuoteItemModal_${quoteId}`);
                    if (!$modal.length) {
                        console.error(`[Select2] ERROR: Modal not found: #newQuoteItemModal_${quoteId}`);
                        return;
                    }

                    $select.select2({
                        ajax: {
                            url: '/api/Product', // Replace with your actual endpoint
                            dataType: 'json',
                            delay: 250,
                            data: params => ({ search: params.term || '' }),
                            processResults: (data) => {
                                console.log(`[Select2] Product response:`, data);
                                return {
                                    results: data.map(item => ({
                                        id: item.id,
                                        text: item.name
                                    }))
                                };
                            },
                            cache: true
                        },
                        minimumInputLength: 0,
                        placeholder: 'Válasszon terméket...', // "Choose a product..."
                        allowClear: true,
                        theme: 'bootstrap-5',
                        dropdownParent: $modal // Ensures dropdown appears within the modal
                    });

                    console.log(`[Select2] Initialized for ${selector}`);
                }

                function calculateTotalPrice(formPrefix = 'new') {
                    // Parse inputs and ensure they are valid numbers
                    const quantity = Math.max(parseFloat($quantity.val()) || 1, 0.01); // Default to 1, clamp to min value
                    const unitPrice = parseFloat($(`#${formPrefix}UnitPrice`).val()) || 0;
                    const discount = parseFloat($(`#${formPrefix}ItemDiscount`).val()) || 0;
                    const discountType = $(`#${formPrefix}ItemDiscountType`).val();

                    // Calculate initial total
                    let total = quantity * unitPrice;

                    // Apply discount if valid
                    if (discount > 0) {
                        if (discountType === 'percentage') {
                            total -= (total * discount / 100); // Apply percentage discount
                        } else if (discountType === 'amount') {
                            total -= discount; // Apply fixed discount
                        }
                    }

                    // Ensure the total is not negative
                    total = Math.max(total, 0);

                    // Update the total price field
                    $(`#${formPrefix}TotalPrice`).val(total.toFixed(2).replace('.', ','));

                    // Log debug information
                    console.log(`[Calc] Total: Quantity=${quantity}, UnitPrice=${unitPrice}, Discount=${discount}, Type=${discountType}, Total=${total}`);
                }

                function updateTotalAmount(quoteId = null) {
                    let subtotal = 0;
                    if (quoteId) {
                        $(`#quoteItemsTable_${quoteId} tbody tr`).each(function() {
                            const quantity = parseFloat($(this).find('td:nth-child(3)').text()) || 0;
                            const unitPrice = parseFloat($(this).find('td:nth-child(4)').text().replace(',', '.')) || 0;
                            const discountText = $(this).find('td:nth-child(5)').text();
                            let discount = 0;
                            if (discountText.includes('%')) {
                                discount = quantity * unitPrice * parseFloat(discountText.replace('%', '').replace(',', '.')) / 100;
                            } else {
                                discount = parseFloat(discountText.replace(',', '.')) || 0;
                            }
                            subtotal += Math.max(0, (quantity * unitPrice) - discount);
                        });
                    } else {
                        itemsData.forEach(item => subtotal += Math.max(0, item.totalPrice));
                    }

                    const discountPercentage = parseFloat($('#discountPercentage').val()) || 0;
                    const discountAmount = parseFloat($('#discountAmount').val()) || 0;
                    let total = subtotal;

                    if (discountPercentage > 0) {
                        if (discountPercentage > 100) {
                            showToast('error', 'A kedvezmény százaléka nem lehet nagyobb 100%-nál!');
                            $('#discountPercentage').val('').addClass('is-invalid');
                            total = subtotal;
                        } else {
                            total *= (1 - discountPercentage / 100);
                        }
                    } else if (discountAmount > 0) {
                        if (discountAmount > subtotal) {
                            showToast('error', 'A kedvezmény összege nem lehet nagyobb az részösszegnél!');
                            $('#discountAmount').val('').addClass('is-invalid');
                            total = subtotal;
                        } else {
                            total -= discountAmount;
                        }
                    }

                    total = Math.max(0, total);
                    $('#totalAmount').val(total.toFixed(2).replace('.', ','));
                    if (total === 0 && (subtotal > 0 || discountAmount > 0 || discountPercentage > 0)) {
                        $('#totalAmount').addClass('is-invalid');
                        showToast('warning', 'A teljes összeg nem lehet negatív, 0-ra lett állítva.');
                    } else {
                        $('#totalAmount').removeClass('is-invalid');
                    }
                    return total;
                }
                

                let itemsData = [];

            $(document).on('click', '.save-quote-item', function () {
                const $button = $(this);
                const $form = $('#editQuoteItemForm');
                const quoteIdInput = $form.find('#editQuoteId');
                const quoteId = $('#editQuoteId').val();
                const quoteItemId = $form.find('#editQuoteItemId').val() || 0;
                const productId = $form.find('#editProductId').val() || $form.find('select[name="ProductId"]').val();
                const quantity = parseFloat($form.find('#editQuantity').val()) || 0;
                const unitPrice = parseFloat($form.find('#editUnitPrice').val()) || 0;
                const discount = parseFloat($form.find('#editItemDiscount').val()) || 0;
                const discountType = $form.find('#editItemDiscountType').val();
                const description = $form.find('#editItemDescription').val().trim();

                log('[SaveQuoteItem] Form DOM context:', {
                    formId: $form.attr('id'),
                    quoteIdInputExists: quoteIdInput.length > 0,
                    quoteIdInputValue: quoteIdInput.val()
                });

                log('[SaveQuoteItem] Form data:', {
                    quoteId, quoteItemId, productId, quantity, unitPrice, discount, discountType, description
                });

                if (!$form[0].checkValidity() || !quoteId || !productId || quantity <= 0 || unitPrice <= 0) {
                    $form.addClass('was-validated');
                    showToast('error', 'Kérjük, töltse ki az összes kötelező mezőt (Árajánlat ID, Termék, Mennyiség > 0, Egységár > 0)!');
                    log('[SaveQuoteItem] Validation failed:', { quoteId, productId, quantity, unitPrice });
                    return;
                }

                const payload = {
                    productId: parseInt(productId),
                    quantity: parseFloat(quantity.toFixed(2)), // Supports decimals like 2.5
                    unitPrice: parseFloat(unitPrice.toFixed(2)),
                    itemDescription: description,
                    discountPercentage: discountType === 'percentage' ? parseFloat(discount.toFixed(2)) : null,
                    discountAmount: discountType === 'amount' ? parseFloat(discount.toFixed(2)) : null
                };

                log('[SaveQuoteItem] Sending payload:', payload);

                const url = quoteItemId ? `/api/Quotes/${quoteId}/items/${quoteItemId}` : `/api/Quotes/${quoteId}/items`;
                const method = quoteItemId ? 'PUT' : 'POST';

                $.ajax({
                    url: url,
                    method: method,
                    contentType: 'application/json',
                    data: JSON.stringify(payload),
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                    beforeSend: function () {
                        $button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status"></span> Mentés...');
                        log('[SaveQuoteItem] Sending AJAX request to:', url);
                    },
                    success: function (response) {
                        log('[SaveQuoteItem] Response:', response);
                        showToast('success', 'Tétel sikeresen mentve!');
                        $form.closest('.modal').modal('hide');

                        // Update quote items table
                        const $table = $(`#quoteItemsTable_${quoteId}`);
                        const isNewItem = !quoteItemId;

                        if (isNewItem) {
                            const newRow = `
                                <tr data-item-id="${response.quoteItemId}">
                                    <td>${response.product?.name || 'N/A'}</td>
                                    <td>${response.itemDescription || ''}</td>
                                    <td>${response.quantity.toFixed(2)}</td>
                                    <td>${response.unitPrice.toFixed(2)}</td>
                                    <td>${
                                        response.discountPercentage ? response.discountPercentage.toFixed(2) + '%' :
                                        response.discountAmount ? response.discountAmount.toFixed(2) : '0,00'
                                    }</td>
                                    <td>${
                                        (response.quantity * response.unitPrice - 
                                        (response.discountAmount || 
                                        (response.discountPercentage ? 
                                        (response.quantity * response.unitPrice * response.discountPercentage / 100) : 0)
                                        )).toFixed(2)
                                    }</td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <button class="btn btn-primary btn-sm edit-quote-item"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#editQuoteItemModal"
                                                    data-quote-id="${quoteId}"
                                                    data-item-id="${response.quoteItemId}"
                                                    data-product-id="${response.productId}"
                                                    data-product-name="${response.product?.name || ''}"
                                                    data-quantity="${response.quantity.toFixed(2)}"
                                                    data-unit-price="${response.unitPrice.toFixed(2)}"
                                                    data-discount="${
                                                        response.discountPercentage ? response.discountPercentage.toFixed(2) :
                                                        response.discountAmount ? response.discountAmount.toFixed(2) : ''
                                                    }"
                                                    data-discount-type="${response.discountPercentage ? 'percentage' : 'amount'}"
                                                    data-description="${response.itemDescription || ''}"
                                                    data-total-price="${
                                                        (response.quantity * response.unitPrice - 
                                                        (response.discountAmount || 
                                                        (response.discountPercentage ? 
                                                        (response.quantity * response.unitPrice * response.discountPercentage / 100) : 0)
                                                        )).toFixed(2)
                                                    }"
                                                    aria-label="Tétel szerkesztése">
                                                <i class="bi bi-pencil-square me-1"></i>Szerkesztés
                                            </button>
                                            <button class="btn btn-danger btn-sm delete-item"
                                                    data-quote-id="${quoteId}"
                                                    data-item-id="${response.quoteItemId}"
                                                    aria-label="Tétel törlése">
                                                <i class="bi bi-trash me-2"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>`;
                            $table.find('tbody').append(newRow);
                            $table.find('tr td[colspan="7"]').closest('tr').remove();
                        } else {
                            const $row = $table.find(`tr[data-item-id="${quoteItemId}"]`);
                            $row.html(`
                                <td>${response.product?.name || 'N/A'}</td>
                                <td>${response.itemDescription || ''}</td>
                                <td>${response.quantity.toFixed(2)}</td>
                                <td>${response.unitPrice.toFixed(2)}</td>
                                <td>${
                                    response.discountPercentage ? response.discountPercentage.toFixed(2) + '%' :
                                    response.discountAmount ? response.discountAmount.toFixed(2) : '0,00'
                                }</td>
                                <td>${
                                    (response.quantity * response.unitPrice - 
                                    (response.discountAmount || 
                                    (response.discountPercentage ? 
                                    (response.quantity * response.unitPrice * response.discountPercentage / 100) : 0)
                                    )).toFixed(2)
                                }</td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <button class="btn btn-primary btn-sm edit-quote-item"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editQuoteItemModal"
                                                data-quote-id="${quoteId}"
                                                data-item-id="${response.quoteItemId}"
                                                data-product-id="${response.productId}"
                                                data-product-name="${response.product?.name || ''}"
                                                data-quantity="${response.quantity.toFixed(2)}"
                                                data-unit-price="${response.unitPrice.toFixed(2)}"
                                                data-discount="${
                                                    response.discountPercentage ? response.discountPercentage.toFixed(2) :
                                                    response.discountAmount ? response.discountAmount.toFixed(2) : ''
                                                }"
                                                data-discount-type="${response.discountPercentage ? 'percentage' : 'amount'}"
                                                data-description="${response.itemDescription || ''}"
                                                data-total-price="${
                                                    (response.quantity * response.unitPrice - 
                                                    (response.discountAmount || 
                                                    (response.discountPercentage ? 
                                                    (response.quantity * response.unitPrice * response.discountPercentage / 100) : 0)
                                                    )).toFixed(2)
                                                }"
                                                aria-label="Tétel szerkesztése">
                                            <i class="bi bi-pencil-square me-1"></i>Szerkesztés
                                        </button>
                                        <button class="btn btn-danger btn-sm delete-item"
                                                data-quote-id="${quoteId}"
                                                data-item-id="${response.quoteItemId}"
                                                aria-label="Tétel törlése">
                                            <i class="bi bi-trash me-2"></i>
                                        </button>
                                    </div>
                                </td>
                            `);
                        }

                        // Update quote card's TotalAmount
                        const $quoteCard = $(`.partner-card[data-quote-id="${quoteId}"] .quote-amount`);
                        if ($quoteCard.length) {
                            if (response.quoteTotalAmount != null) {
                                log('[SaveQuoteItem] Updating TotalAmount:', response.quoteTotalAmount);
                                $quoteCard.html(`<i class="bi bi-currency-dollar me-1"></i>${response.quoteTotalAmount.toLocaleString('hu-HU', { style: 'currency', currency: 'HUF' })}`);
                            } else {
                                log('[SaveQuoteItem] quoteTotalAmount missing in response:', response);
                                showToast('warning', 'Az árajánlat összege nem frissült, kérjük, frissítse az oldalt.');
                            }
                        } else {
                            log('[SaveQuoteItem] Quote card not found:', `.partner-card[data-quote-id="${quoteId}"] .quote-amount`);
                            showToast('error', 'Nem található az árajánlat kártya a frissítéshez.');
                        }
                    },
                    error: function (xhr) {
                        const errorMessage = xhr.responseJSON?.error || 'Hiba történt a mentés során.';
                        showToast('error', errorMessage);
                        log('[SaveQuoteItem] AJAX error:', xhr.status, xhr.responseText);
                    },
                    complete: function () {
                        $button.prop('disabled', false).html('Tétel mentése');
                    }
                });
            });

            $(document).on('click', '.confirm-delete-quote', function () {
                const quoteId = $(this).data('quote-id'); // Get the quote ID from the button

                $.ajax({
                    url: `/api/Quotes/${quoteId}`, // Use the correct API endpoint
                    method: 'DELETE', // Use DELETE as the method
                    success: function (response) {
                        // Show a success notification
                        showToast('success', 'Árajánlat sikeresen törölve!');

                        // Hide the modal
                        $(`#deleteQuoteModal_${quoteId}`).modal('hide');

                        // Remove the deleted quote from the UI
                        $(`.partner-card[data-quote-id="${quoteId}"]`).remove();
                    },
                    error: function (xhr) {
                        // Show error notification
                        console.error('Error deleting quote:', xhr.responseText);
                        showToast('error', 'Hiba történt a törlés során.');
                    }
                });
            });

            // Initialize Select2 for product dropdowns when modals are shown
            $(document).on('shown.bs.modal', '[id^="newQuoteItemModal_"]', function () {
                const $modal = $(this);
                const $select = $modal.find('.select2-product');
                
                // Initialize Select2
                if ($select.length && !$select.hasClass('select2-hidden-accessible')) {
                    $select.select2({
                        theme: 'bootstrap-5',
                        placeholder: 'Válasszon terméket...',
                        allowClear: true,
                        width: '100%',
                        dropdownParent: $modal
                    });
                }

                // Populate products via AJAX
                $.ajax({
                    url: '/api/Product', // Update to correct endpoint
                    method: 'GET',
                    success: function (products) {
                        $select.empty();
                        $select.append('<option value="">Válasszon terméket...</option>');
                        products.forEach(product => {
                            $select.append(`<option value="${product.productId}">${product.name}</option>`);
                        });
                        $select.trigger('change');
                    },
                    error: function (xhr) {
                        console.error('[PopulateProducts] Error:', xhr.status, xhr.responseText);
                        showToast('error', 'Nem sikerült betölteni a termékeket.');
                    }
                });
            });

            $(document).on('input change', '[id^="newQuoteItemForm_"], #editQuoteItemForm', function (e) {
                const $form = $(this).closest('form'); // Ensure we are working within the correct form
                const $quantity = $form.find('[name="Quantity"], #editQuantity');
                const $unitPrice = $form.find('[name="UnitPrice"]');
                const $discount = $form.find('[name="Discount"]');
                const $discountType = $form.find('[name="DiscountType"]');
                const $totalPrice = $form.find('[id^="newTotalPrice_"], #editTotalPrice');

                // Parse input values and set defaults if necessary
                const quantity = Math.max(parseFloat($quantity.val()) || 1, 0.01); // Default to 1, clamp to 0.01
                const unitPrice = parseFloat($unitPrice.val()) || 0;
                const discount = parseFloat($discount.val()) || 0;
                const discountType = $discountType.val();

                // Debugging: Log the input values
                console.log('[UpdateTotalPrice] Input Values:', { quantity, unitPrice, discount, discountType });

                // Calculate the total price
                let total = quantity * unitPrice;

                if (discountType === 'percentage' && discount > 0) {
                    total -= total * discount / 100; // Apply percentage discount
                } else if (discountType === 'amount' && discount > 0) {
                    total -= discount; // Apply fixed discount
                }

                // Ensure total is not negative
                if (total < 0) {
                    total = 0;
                    console.log('[UpdateTotalPrice] Total is negative, resetting to 0');
                }

                // Update the total price field
                $totalPrice.val(total.toFixed(2).replace('.', ','));

                // Debugging: Log the updated total price
                console.log('[UpdateTotalPrice] Calculated Total Price:', total);
            });
        });
    </script>



<!-- Tom Select Dependencies -->
<link href="https://cdn.jsdelivr.net/npm/tom-select@2.4.3/dist/css/tom-select.bootstrap5.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/tom-select@2.4.3/dist/js/tom-select.complete.min.js"></script>

<!-- JavaScript for Tom Select -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.tom-select').forEach(select => {
            const selectedId = select.dataset.selectedId;
            const selectedText = select.dataset.selectedText;
            console.log('Tom Select Init: selectedId =', selectedId, 'selectedText =', selectedText); // Debug

            const control = new TomSelect(select, {
                valueField: 'id',
                labelField: 'text',
                searchField: 'text',
                placeholder: '-- Válasszon partnert --',
                allowEmptyOption: true,
                maxOptions: 100,
                load: function(query, callback) {
                    const url = `/api/partners?term=${encodeURIComponent(query)}&search=${encodeURIComponent(query)}&q=${encodeURIComponent(query)}`;
                    console.log('Search Query:', url); // Debug
                    fetch(url)
                        .then(response => {
                            console.log('API /api/partners Status:', response.status); // Debug
                            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                            return response.json();
                        })
                        .then(data => {
                            console.log('API /api/partners Response:', data); // Debug
                            callback(data);
                        })
                        .catch(error => {
                            console.error('Search Error:', error);
                            callback();
                        });
                },
                shouldLoad: function(query) {
                    return true; // Load for all queries, including empty
                },
                render: {
                    option: function(data, escape) {
                        return `<div>${escape(data.text)}</div>`;
                    },
                    item: function(data, escape) {
                        return `<div>${escape(data.text)}</div>`;
                    },
                    no_results: function(data, escape) {
                        return `<div class="no-results">Nincs találat "${escape(data.input)}"</div>`;
                    }
                }
            });

            // Preload selected partner
            if (selectedId && selectedId !== '0') {
                // Try multiple API endpoint variations
                const endpoints = [
                    `/api/partners/${selectedId}`,
                    `/api/Partners/${selectedId}`,
                    `/Partners/${selectedId}`
                ];
                let attempts = 0;

                function tryFetch() {
                    if (attempts >= endpoints.length) {
                        // Fallback to quote.Partner.CompanyName
                        console.warn('All API endpoints failed for ID ' + selectedId + '; using fallback text');
                        control.addOption({ id: selectedId, text: selectedText || 'Unknown (ID: ' + selectedId + ')' });
                        control.setValue(selectedId);
                        return;
                    }

                    const url = endpoints[attempts];
                    console.log('Attempting preload: ' + url); // Debug
                    fetch(url)
                        .then(response => {
                            console.log('API ' + url + ' Status:', response.status); // Debug
                            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                            return response.json();
                        })
                        .then(data => {
                            console.log('API ' + url + ' Response:', data); // Debug
                            if (data && data.text) {
                                control.addOption({ id: data.id, text: data.text });
                                control.setValue(data.id);
                            } else {
                                console.warn('No valid text in response for ID ' + selectedId);
                                control.addOption({ id: selectedId, text: selectedText || 'Unknown (ID: ' + selectedId + ')' });
                                control.setValue(selectedId);
                            }
                        })
                        .catch(error => {
                            console.error('Failed to preload partner for ID ' + selectedId + ' at ' + url + ':', error);
                            attempts++;
                            tryFetch(); // Try next endpoint
                        });
                }

                tryFetch();
            } else {
                console.warn('No valid selectedId provided for Tom Select');
            }
        });
    });
</script>




<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modals = document.querySelectorAll('.modal[data-quote-id]');
        modals.forEach(modal => {
            const quoteId = modal.dataset.quoteId;
            const modalId = `editQuoteModal_${quoteId}`;

            if (modal.id === modalId) {
                // Real-time total calculation for items
                const rows = modal.querySelectorAll('#items_' + quoteId + ' tbody tr[data-item-id]:not(.description-row)');
                rows.forEach(row => {
                    const quantityInput = row.querySelector('.quantity');
                    const unitPriceInput = row.querySelector('.unit-price');
                    const discountInput = row.querySelector('.discount');
                    const discountTypeSelect = row.querySelector('.discount-type');
                    const totalInput = row.querySelector('.total');

                    const updateTotal = () => {
                        let quantity = parseFloat(quantityInput.value) || 0;
                        let unitPrice = parseFloat(unitPriceInput.value) || 0;
                        let discountValue = parseFloat(discountInput.value) || 0;
                        let discount = 0;

                        if (discountTypeSelect.value === 'percentage') {
                            discount = (quantity * unitPrice * discountValue) / 100;
                        } else {
                            discount = discountValue;
                        }

                        const total = (quantity * unitPrice - discount).toFixed(2);
                        totalInput.value = total.toString().replace('.', ',');
                    };

                    [quantityInput, unitPriceInput, discountInput, discountTypeSelect].forEach(input => {
                        input.addEventListener('input', updateTotal);
                    });

                    updateTotal();
                });

                // Save button logic
                modal.querySelector('.save-quote').addEventListener('click', () => {
                    // Collect base info
                    const form = modal.querySelector(`#quoteBaseInfoForm_${quoteId}`);
                    const baseInfo = {
                        quoteNumber: form.querySelector('[name="quoteNumber"]').value,
                        quoteDate: form.querySelector('[name="quoteDate"]').value,
                        partnerId: form.querySelector('[name="partnerId"]').value,
                        salesPerson: form.querySelector('[name="salesPerson"]').value,
                        validityDate: form.querySelector('[name="validityDate"]').value,
                        subject: form.querySelector('[name="subject"]').value,
                        description: form.querySelector('[name="description"]').value,
                        status: form.querySelector('[name="status"]').value
                    };

                    // Collect items
                    const items = [];
                    rows.forEach(row => {
                        const itemId = row.dataset.itemId;
                        const discountType = row.querySelector('.discount-type').value;
                        const discountValue = parseFloat(row.querySelector('.discount').value) || 0;
                        const descriptionRow = modal.querySelector(`tr.description-row[data-item-id="${itemId}"]`);
                        const descriptionInput = descriptionRow ? descriptionRow.querySelector('.description') : null;
                        items.push({
                            itemId: itemId,
                            description: descriptionInput ? descriptionInput.value : '',
                            quantity: parseFloat(row.querySelector('.quantity').value) || 0,
                            unitPrice: parseFloat(row.querySelector('.unit-price').value) || 0,
                            discount: discountValue,
                            discountType: discountType
                        });
                    });

                    // Send data to server
                    fetch(`/api/quote/${quoteId}/update`, {
                        method: 'POST',
                        body: JSON.stringify({ baseInfo, items }),
                        headers: { 'Content-Type': 'application/json' }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Save successful:', data);
                        modal.querySelector('.btn-close').click(); // Close modal on success
                    })
                    .catch(error => console.error('Save failed:', error));
                });
            }
        });
    });
</script>

    <script>
        // Ajánlat másolása. csak külön script-ben működik, ezért kell ide is a showtoast.
            function showToast(type, message) {
                // Create the toast element
                const toast = $(`
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `);

                // Append toast to the container
                $('#toastContainer').append(toast);

                // Initialize and show the toast
                const bsToast = new bootstrap.Toast(toast[0]);
                bsToast.show();

                // Remove the toast after 5 seconds
                setTimeout(() => toast.remove(), 5500); // Includes 500ms fade-out
            }

            async function copyQuote(quoteId) {
                try {
                    const response = await fetch(`/api/Quotes/${quoteId}/copy`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    const result = await response.json();
                    if (response.ok && result) {
                        showToast('success', `Árajánlat sikeresen másolva! Új szám: ${result.quoteNumber}`);
                        
                        // Delay the reload to let the toast be visible
                        setTimeout(() => location.reload(), 3000); // Reload after 3 seconds
                    } else {
                        showToast('error', result.error || 'Másolás sikertelen.');
                    }
                } catch (error) {
                    showToast('error', 'Hiba történt a másolás során.');
                    console.error('[Error] Copy quote error:', error);
                }
            }

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.copy-quote-btn').forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                    const quoteId = this.getAttribute('data-quote-id');
                    copyQuote(quoteId);
                });
            });
        });
    </script>

}

<style>

    .table .description-row {
        background-color: #f8f9fa; /* Light background for description row */
    }
    .table .description-row td {
        padding: 10px;
    }
    .table .description {
        resize: vertical;
        min-height: 60px;
        max-height: 100px;
        width: 100%;
    }
    .table th:nth-child(1), .table td:nth-child(1) { /* Product column */
        max-width: 200px;
    }
    .btn-link {
        text-decoration: none;
    }
    .nav-tabs {
        margin-bottom: 15px;
    }
    .tab-content {
        min-height: 200px; /* Ensure tab content has enough space */
    }

.drag-handle {
    cursor: move;
    width: 30px;
    text-align: center;
    vertical-align: middle;
}

.drag-handle .bi-grip-vertical {
    font-size: 1.2rem;
    color: #6c757d;
}

#quoteItemsTable tbody tr:hover .drag-handle .bi-grip-vertical {
    color: #007bff;
}

#quoteItemsTable .placeholder {
    background-color: #f8f9fa;
    border: 2px dashed #007bff;
    height: 50px;
}



[data-theme="dark"] .partner-card {
        background-color: #2a2a2a;
        border: 1px solid #444;
    }


/* Badge styling */
.badge-draft { background-color: #6c757d; }
.badge-sent { background-color: #007bff; }
.badge-accepted { background-color: #28a745; }
.badge-rejected { background-color: #dc3545; }

    /* Ensure textarea in Leírás column is wider and readable */
    #quoteItemsTable .itemDescription {
        width: 100%;
        min-width: 200px;
        height: 60px;
        resize: vertical;
    }
    /* Adjust table column widths */
    #quoteItemsTable th:nth-child(2), #quoteItemsTable td:nth-child(2) {
        width: 30%;
    }

        /* Card-based layout matching Leads page */
        .card-grid-header {
            padding: 0 15px 2px 15px;
            margin-top: 0px;
            background-color: #F1EFEC;
            border-bottom: 1px solid #dee2e6;
        }

        .card-grid-row {
            display: grid;
            grid-template-columns: 1fr 2fr 1fr 1fr 1fr auto;
            gap: 10px;
            align-items: center;
        }

        .card-grid-column {
            font-weight: 600;
            color: #495057;
            font-size: 0.9rem;
            text-transform: uppercase;
        }

        .card-grid-cell {
            padding: 0 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Column widths */
        .quote-number-col { flex: 1 1 15%; min-width: 120px; }
        .quote-partner-col { flex: 1 1 25%; min-width: 150px; }
        .quote-date-col { flex: 1 1 15%; min-width: 100px; }
        .quote-status-col { flex: 1 1 15%; min-width: 100px; }
        .quote-amount-col { flex: 1 1 15%; min-width: 120px; }
        .actions-column, .actions-cell { flex: 0 0 auto; width: auto; text-align: right; padding-right: 10px; }

        /* Button group styling */
        .btn-group-sm .btn {
            padding: 0.2rem 0.5rem;
            font-size: 0.875rem;
        }

        /* Badge styling */
        .badge-draft { background-color: #6c757d; }
        .badge-sent { background-color: #007bff; }
        .badge-accepted { background-color: #28a745; }
        .badge-rejected { background-color: #dc3545; }

        /* Ensure pagination is centered */
        .fixed-footer .pagination {
            display: flex;
            justify-content: center;
            width: 100%;
            margin-bottom: 0;
        }

        .fixed-footer nav {
            flex-grow: 1;
            text-align: center;
        }

        /* Modal Sizing */
        .modal-lg { max-width: 1000px !important; }

        /* Consistent Tab Content Styling */
        #newQuoteModal .tab-content,
        #newQuoteItemModal .tab-content,
        [id^="editQuoteModal_"] .tab-content,
        [id^="newQuoteItemModal_"] .tab-content,
        [id^="viewQuoteModal_"] .tab-content {
            min-width: 0;
            width: 100%;
            min-height: 450px;
            max-height: 65vh;
            overflow-y: auto;
            overflow-x: hidden;
            padding: 1rem;
            background-color: #fff;
        }

        /* Consistent Tab Pane Styling */
        #newQuoteModal .tab-pane,
        #newQuoteItemModal .tab-pane,
        [id^="editQuoteModal_"] .tab-pane,
        [id^="newQuoteItemModal_"] .tab-pane,
        [id^="viewQuoteModal_"] .tab-pane {
            width: 100%;
        }

        /* Adjust Modal Body Padding */
        #newQuoteModal .modal-body,
        #newQuoteItemModal .modal-body,
        [id^="editQuoteModal_"] .modal-body,
        [id^="newQuoteItemModal_"] .modal-body,
        [id^="viewQuoteModal_"] .modal-body {
            padding: 1rem 1rem 0 1rem;
        }

        /* Remove margin below tabs */
        #newQuoteModal .nav-tabs,
        [id^="editQuoteModal_"] .nav-tabs,
        [id^="viewQuoteModal_"] .nav-tabs {
            margin-bottom: 0 !important;
        }

        /* General Table Cell Styling */
        .table tbody tr td {
            vertical-align: middle;
        }

        /* View Modal Specific Content Styling */
        [id^="viewQuoteModal_"] .table {
            margin-bottom: 0;
        }

        [id^="viewQuoteModal_"] .tab-pane > p {
            padding: 1.5rem;
            text-align: center;
            color: #6c757d;
        }

        /* Select2 styling */
.select2-container {
            width: 100% !important;
        }

        .select2-container {
    z-index: 1060; /* Higher than Bootstrap modal */
}

        .select2-container--bootstrap-5 .select2-selection--single {
            height: 38px;
            padding: 0.375rem 2.25rem 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            background-color: #fff;
        }

        .select2-container--bootstrap-5 .select2-selection--single .select2-selection__rendered {
            line-height: 1.5;
            padding-top: 0;
            padding-bottom: 0;
            color: #495057;
        }

        .select2-container--bootstrap-5 .select2-selection--single .select2-selection__arrow {
            height: 38px;
            right: 0.75rem;
        }

        .select2-container--bootstrap-5 .select2-dropdown {
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
        }

        .select2-container-wrapper {
            position: relative;
        }

        [data-theme="dark"] .select2-container--bootstrap-5 .select2-selection--single {
            background-color: #3a3a3a;
            border-color: #666;
            color: #e0e0e0;
        }

        [data-theme="dark"] .select2-container--bootstrap-5 .select2-selection--single .select2-selection__rendered {
            color: #e0e0e0;
        }

        [data-theme="dark"] .select2-container--bootstrap-5 .select2-dropdown {
            background-color: #2a2a2a;
            border-color: #666;
            color: #e0e0e0;
        }

        [data-theme="dark"] .select2-container--bootstrap-5 .select2-results__option {
            color: #e0e0e0;
        }

        [data-theme="dark"] .select2-container--bootstrap-5 .select2-results__option--highlighted {
            background-color: #357abd;
            color: #ffffff;
        }

        /* Dark mode overrides */
        [data-theme="dark"] .card-grid-header {
            background-color: #2a2a2a;
            border-bottom: 1px solid #444;
        }

        [data-theme="dark"] .card-grid-column {
            color: #b0b0b0;
        }

        [data-theme="dark"] .quote-card {
            background-color: #2a2a2a;
            border: 1px solid #444;
        }

        [data-theme="dark"] .fixed-footer {
            background-color: #2a2a2a;
            border-top: 1px solid #444;
        }

        [data-theme="dark"] .alert-success {
            background-color: #2e7d32;
            border-color: #1b5e20;
            color: #e0e0e0;
        }

        [data-theme="dark"] .alert-danger {
            background-color: #d32f2f;
            border-color: #b71c1c;
            color: #e0e0e0;
        }

        [data-theme="dark"] #newQuoteModal .tab-content,
        [data-theme="dark"] #newQuoteItemModal .tab-content,
        [data-theme="dark"] [id^="editQuoteModal_"] .tab-content,
        [data-theme="dark"] [id^="newQuoteItemModal_"] .tab-content,
        [data-theme="dark"] [id^="viewQuoteModal_"] .tab-content,
        [data-theme="dark"] [id^="deleteQuoteModal_"] .tab-content {
            background-color: #2a2a2a !important;
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] #newQuoteModal .tab-pane,
        [data-theme="dark"] #newQuoteItemModal .tab-pane,
        [data-theme="dark"] [id^="editQuoteModal_"] .tab-pane,
        [data-theme="dark"] [id^="newQuoteItemModal_"] .tab-pane,
        [data-theme="dark"] [id^="viewQuoteModal_"] .tab-pane,
        [data-theme="dark"] [id^="deleteQuoteModal_"] .tab-pane {
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] #newQuoteModal .modal-body,
        [data-theme="dark"] #newQuoteItemModal .modal-body,
        [data-theme="dark"] [id^="editQuoteModal_"] .modal-body,
        [data-theme="dark"] [id^="newQuoteItemModal_"] .modal-body,
        [data-theme="dark"] [id^="viewQuoteModal_"] .modal-body,
        [data-theme="dark"] [id^="deleteQuoteModal_"] .modal-body {
            background-color: #2a2a2a !important;
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] .form-control {
            background-color: #333333 !important;
            border-color: #666 !important;
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] .form-control:focus {
            background-color: #333333 !important;
            border-color: #888 !important;
            color: #e0e0e0 !important;
            box-shadow: 0 0 0 0.2rem rgba(100, 100, 100, 0.25) !important;
        }

        [data-theme="dark"] .form-control::placeholder {
            color: #aaaaaa !important;
        }

        [data-theme="dark"] .form-label {
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] .modal-title {
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] #newQuoteModal .nav-tabs,
        [data-theme="dark"] [id^="editQuoteModal_"] .nav-tabs,
        [data-theme="dark"] [id^="viewQuoteModal_"] .nav-tabs {
            background-color: #2a2a2a !important;
            border-bottom: 1px solid #444 !important;
        }

        [data-theme="dark"] #newQuoteModal .nav-tabs .nav-link,
        [data-theme="dark"] [id^="editQuoteModal_"] .nav-tabs .nav-link,
        [data-theme="dark"] [id^="viewQuoteModal_"] .nav-tabs .nav-link {
            color: #b0b0b0 !important;
        }

        [data-theme="dark"] #newQuoteModal .nav-tabs .nav-link:hover,
        [data-theme="dark"] [id^="editQuoteModal_"] .nav-tabs .nav-link:hover,
        [data-theme="dark"] [id^="viewQuoteModal_"] .nav-tabs .nav-link:hover {
            color: #e0e0e0 !important;
            background-color: #3a3a3a !important;
        }

        [data-theme="dark"] #newQuoteModal .nav-tabs .nav-link.active,
        [data-theme="dark"] [id^="editQuoteModal_"] .nav-tabs .nav-link.active,
        [data-theme="dark"] [id^="viewQuoteModal_"] .nav-tabs .nav-link.active {
            color: #e0e0e0 !important;
            background-color: #3a3a3a !important;
            border-color: #444 #444 #2a2a2a !important;
        }

        [data-theme="dark"] [id^="viewQuoteModal_"] .tab-pane > p {
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] [id^="viewQuoteModal_"] .table {
            color: #e0e0e0 !important;
        }

        [data-theme="dark"] [id^="viewQuoteModal_"] .table th,
        [data-theme="dark"] [id^="viewQuoteModal_"] .table td {
            border-color: #444 !important;
            color: #e0e0e0 !important;
        }
    </style>
